{"version":3,"sources":["TaskManger.js","App.js","index.js"],"names":["TaskManger","useState","input","setInput","localStorage","getItem","JSON","parse","item","setItem","btnName","setbtnName","editId","setEditId","useEffect","stringify","className","type","placeholder","onChange","e","target","value","onClick","alert","map","id","name","myitem","Date","getTime","toString","elem","index","console","log","editedItem","find","editItem","updateData","filter","val","deleteItem","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+MAqGeA,EApFI,WAEnB,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAwBF,mBAdRG,aAAaC,QAAQ,cAGrBC,KAAKC,MAAMH,aAAaC,QAAQ,eAEhC,IAShB,mBAAOG,EAAP,KAAaC,EAAb,KACA,EAA8BR,mBAAS,YAAvC,mBAAOS,EAAP,KAAgBC,EAAhB,KACA,EAA4BV,mBAAS,MAArC,mBAAOW,EAAP,KAAeC,EAAf,KAEAC,qBAAU,WACNV,aAAaK,QAAQ,aAAcH,KAAKS,UAAUP,MACnD,CAACA,IA+CJ,OACK,sBAAKQ,UAAU,cAAf,UACG,8CACA,uBAAOC,KAAK,OAAOC,YAAY,WAAWC,SAAU,SAACC,GAAD,OAAOjB,EAASiB,EAAEC,OAAOC,QAAQA,MAAOpB,IAC5F,sBAAKc,UAAU,YAAf,UACI,wBAAQO,QAjDH,WACb,IAAIrB,EACA,OAAOsB,MAAM,gBACX,GAAGtB,GAASU,EACdH,EACID,EAAKiB,KAAI,SAACH,GACN,OAAGA,EAAMI,KAAOd,EACL,2BAAIJ,GAAX,IAAiBmB,KAAKzB,IAEnBoB,MAGfnB,EAAS,IACTU,EAAU,MACVF,EAAW,gBAEX,CACA,IAAIiB,EAAS,CAAEF,IAAG,IAAIG,MAAOC,UAAUC,WAAYJ,KAAKzB,GACxDO,EAAQ,GAAD,mBAAKD,GAAL,CAAWoB,KAClBzB,EAAS,MA8BL,SAA4BO,IAC5B,qCACA,mDAEJ,qBAAKM,UAAU,aAAf,SAEQR,EAAKiB,KAAI,SAACO,EAAMC,GACZ,OACA,gCACI,4BAAID,EAAKL,OACT,iCACI,sBAAMJ,QAAS,kBApC1B,SAACG,GACdf,EAAW,aACXuB,QAAQC,IAAIT,GACZ,IAAIU,EAAa5B,EAAK6B,MAAK,SAACL,GACxB,OAAOA,EAAKN,KAAOA,KAEvBQ,QAAQC,IAAIC,GACZjC,EAASiC,EAAWT,MACpBd,EAAUuB,EAAWV,IA4BwBY,CAASN,EAAKN,KAAnC,SAAwC,mBAAGV,UAAU,kBACrD,sBAAMO,QAAS,kBAzBxB,SAACG,GAChBQ,QAAQC,IAAIT,GACZ,IAAMa,EAAa/B,EAAKgC,QAAO,SAACC,GAC5B,OAAOA,EAAIf,KAAOA,KAEtBjB,EAAQ8B,GAoBqCG,CAAWV,EAAKN,KAArC,SAA0C,mBAAGV,UAAU,4BAJrDiB,YC7EfU,MANf,WACE,OACE,cAAC,EAAD,KCDJC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.eb9cd00b.chunk.js","sourcesContent":["import React from 'react'\r\nimport { useState, useEffect } from \"react\";\r\n\r\n\r\n\r\n const getItem = () => {\r\n     let list = localStorage.getItem('myTodoList');\r\n //    console.log(typeof list); //string\r\n     if(list){\r\n         return JSON.parse(localStorage.getItem('myTodoList'))\r\n     }else{\r\n         return [];\r\n     }\r\n }\r\n\r\n\r\n\r\nconst TaskManger = () => {\r\n\r\nconst [input, setInput] = useState(\"\");\r\nconst [item, setItem] = useState(getItem());\r\nconst [btnName, setbtnName] = useState('Add Task');\r\nconst [editId, setEditId] = useState(null);\r\n\r\nuseEffect(() => {\r\n    localStorage.setItem('myTodoList', JSON.stringify(item));\r\n}, [item])\r\n\r\n\r\nconst add_task = () => {\r\n    if(!input){\r\n        return alert('Plz add item');\r\n    }else if(input && editId){\r\n        setItem(\r\n            item.map((value) => {\r\n                if(value.id === editId){\r\n                    return {...item, name:input};\r\n                }\r\n                return value;\r\n            })\r\n        )\r\n        setInput('');\r\n        setEditId(null);\r\n        setbtnName('Add Task');\r\n    }\r\n    else{\r\n        let myitem = { id:new Date().getTime().toString(), name:input }\r\n        setItem([...item, myitem]);\r\n        setInput(\"\");\r\n     \r\n    }\r\n}\r\n\r\nconst editItem = (id) => {\r\n    setbtnName(\"Edit Task\");\r\n    console.log(id);\r\n    let editedItem = item.find((elem) => {\r\n        return elem.id === id\r\n    })\r\n    console.log(editedItem);\r\n    setInput(editedItem.name);\r\n    setEditId(editedItem.id);\r\n}\r\n\r\n\r\nconst deleteItem = (id) => {\r\n    console.log(id);\r\n    const updateData = item.filter((val) => {\r\n        return val.id !== id;\r\n    });\r\n    setItem(updateData);\r\n}\r\n\r\nreturn (\r\n     <div className=\"mainsection\">\r\n        <h2>Task Manager</h2>\r\n        <input type=\"text\" placeholder=\"Add Task\" onChange={(e) => setInput(e.target.value)} value={input} />\r\n        <div className=\"task_btns\">\r\n            <button onClick={add_task}>{btnName}</button>\r\n            <span> </span>\r\n            <button>Clear Task</button>\r\n        </div>\r\n        <div className=\"result_div\">\r\n            {\r\n                item.map((elem, index) => {\r\n                    return(\r\n                    <div key={index}>\r\n                        <p>{elem.name}</p>\r\n                        <span>\r\n                            <span onClick={() => editItem(elem.id)}><i className=\"far fa-edit\"></i></span>\r\n                            <span onClick={() => deleteItem(elem.id)}><i className=\"far fa-trash-alt\"></i></span>\r\n                        </span>\r\n                    </div>        \r\n                    )                    \r\n                })\r\n            }\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default TaskManger\r\n","import './App.css';\nimport TaskManager from './TaskManger';\n\nfunction App() {\n  return (\n    <TaskManager />\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}